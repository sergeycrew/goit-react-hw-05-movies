{"version":3,"file":"static/js/667.3ee30b98.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","components/SearchBar/SearchBar.styled.jsx","components/TrendingMovieList/TrendingMovies.styled.jsx","components/OnSearchMovieList/OnSearchMovieList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","../node_modules/nanoid/index.browser.js","service/api.js","utils/Box/Box.styled.jsx","utils/Box/Box.jsx","utils/Error/Error.styled.jsx","utils/Error/Error.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 40%;\n  left: 50%;\n  margin: 0 auto;\n  transform: translateX(-50%);\n  z-index: 9999;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#ffd600\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListItem = styled.li`\n  list-style: none;\n  background-color: #144272;\n  border-radius: 30px;\n  transition: transform 0.2s;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  &:hover {\n    transform: scale(1.05);\n    background-color: #ff9e56;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n      rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n      rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  }\n`;\nexport const LinkItem = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Label = styled.h2`\n  text-align: center;\n  color: white;\n  font-size: 20px;\n  font-weight: 300;\n  text-transform: uppercase;\n  max-width: 250px;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n","import defaultImg from '../../imgDefaults/default-movie.jpeg';\nimport PropTypes from 'prop-types';\nimport { Img, Label, LinkItem, MovieListItem } from './MovieItem.styled';\n\nconst MovieItem = ({ url, title, activeId, location }) => {\n  return (\n    <MovieListItem>\n      <LinkItem to={`/movies/${activeId}`} state={{ from: location }}>\n        <Img\n          src={\n            url !== null ? `https://image.tmdb.org/t/p/w300${url}` : defaultImg\n          }\n          alt={title}\n        />\n        <Label>{title}</Label>\n      </LinkItem>\n    </MovieListItem>\n  );\n};\n\nMovieItem.propTypes = {\n  url: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  activeId: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.string,\n  }),\n};\n\nexport default MovieItem;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  padding: 40px 15px 0 15px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-bottom: 20px;\n`;\nexport const StyledLabel = styled.label`\n  color: #a5f1e9;\n  font-size: 26px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 15px;\n`;\nexport const StyledInput = styled.input`\n  margin-top: 8px;\n  margin-bottom: 25px;\n  height: 40px;\n  width: 500px;\n  background: transparent;\n  outline: none;\n  border: 1px solid rgb(220, 231, 255);\n  border-radius: 30px;\n  font-size: 18px;\n  color: rgb(220, 231, 255);\n  padding-left: 10px;\n`;\nexport const SearchButon = styled.button`\n  margin-bottom: 15px;\n  color: rgb(220, 231, 255);\n  background: #283657;\n  border: none;\n  width: 200px;\n  height: 40px;\n  text-transform: uppercase;\n  cursor: pointer;\n  font-size: 16px;\n  transition-property: background-color color;\n  transition-duration: 300ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #a5f1e9;\n    color: #144272;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  padding: 30px 0;\n  color: #a5f1e9;\n  font-weight: 400;\n  text-transform: uppercase;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  justify-content: center;\n  padding-bottom: 60px;\n`;\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { MovieList } from 'components/TrendingMovieList/TrendingMovies.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst OnSearchMovieList = ({ movieArray }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movieArray?.map(item => {\n        return (\n          <MovieItem\n            location={location}\n            key={item.id}\n            title={item.original_title}\n            url={item.poster_path}\n            activeId={item.id}\n          />\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default OnSearchMovieList;\n\nOnSearchMovieList.propTypes = {\n  movieArray: PropTypes.array,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst {\n  StyledForm,\n  StyledLabel,\n  StyledInput,\n  SearchButon,\n} = require('./SearchBar.styled');\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  const handleOnChange = e => {\n    setQuery(e.target.value.toLowerCase().trim());\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledLabel htmlFor=\"search\">Find Movie by Name</StyledLabel>\n      <StyledInput\n        type=\"text\"\n        name=\"search\"\n        value={query}\n        onChange={handleOnChange}\n        placeholder=\"Search movie...\"\n        autoComplete=\"off\"\n      />\n      <SearchButon type=\"submit\">Search</SearchButon>\n    </StyledForm>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport OnSearchMovieList from 'components/OnSearchMovieList/OnSearchMovieList';\nimport { Box } from 'utils/Box/Box';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport Error from 'utils/Error/Error';\nimport { getMoviesOnSearch } from 'service/api';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reqId, setReqId] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieTitle = searchParams.get('movieTitle') ?? '';\n\n  useEffect(() => {\n    if (!movieTitle) {\n      return;\n    }\n    async function setMoviesOnSearch() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const data = await getMoviesOnSearch(movieTitle);\n        if (data.results.length === 0) {\n          setError(true);\n        }\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    setMoviesOnSearch();\n  }, [movieTitle, reqId]);\n\n  const handleSubmit = value => {\n    if (value === '') {\n      setMovies([]);\n      return setSearchParams({});\n    }\n    setSearchParams({ movieTitle: value });\n    setReqId(nanoid());\n    setMovies([]);\n    setError(null);\n  };\n\n  return (\n    <Box>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && (\n        <Error text={`Sorry, but nothing was found. Please try again!`} />\n      )}\n      {isLoading && <Loader />}\n      <OnSearchMovieList movieArray={movies} />\n    </Box>\n  );\n};\nexport default Movies;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '213f597963ca958bdd3fa992f56dc364';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesOnSearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  console.log(data);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const SectionLayout = styled.div`\n  max-width: 1200px;\n  min-height: 100vh;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { SectionLayout } from './Box.styled';\n\nexport const Box = ({ children }) => {\n  return <SectionLayout>{children}</SectionLayout>;\n};\n","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h3`\n  text-align: center;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorTitle } from './Error.styled';\n\nconst Error = ({ text }) => {\n  return <ErrorTitle>{text}</ErrorTitle>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n"],"names":["StyledLoader","styled","Loader","height","width","radius","color","ariaLabel","visible","MovieListItem","LinkItem","Link","Label","Img","url","title","activeId","location","to","state","from","src","defaultImg","alt","StyledForm","StyledLabel","StyledInput","SearchButon","Title","MovieList","movieArray","useLocation","map","item","MovieItem","original_title","poster_path","id","require","onSubmit","useState","query","setQuery","e","preventDefault","htmlFor","type","name","value","onChange","target","toLowerCase","trim","placeholder","autoComplete","movies","setMovies","isLoading","setIsLoading","error","setError","reqId","setReqId","useSearchParams","searchParams","setSearchParams","movieTitle","get","useEffect","getMoviesOnSearch","data","results","length","message","setMoviesOnSearch","Box","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","Error","text","axios","API_KEY","getTrending","page","getMovieDetails","getMovieCast","getMovieReviews","console","log","SectionLayout","children","ErrorTitle"],"sourceRoot":""}