{"version":3,"file":"static/js/736.a957985c.chunk.js","mappings":"kRAEaA,EAAQC,EAAAA,GAAAA,IAAH,4DAKLC,EAAYD,EAAAA,GAAAA,GAAH,6KASTE,EAAQF,EAAAA,GAAAA,GAAH,8EAKLG,EAAOH,EAAAA,GAAAA,GAAH,oJASJI,EAAOJ,EAAAA,GAAAA,EAAH,sJ,GASIA,EAAAA,GAAAA,EAAH,qJ,gDCalB,EA5Ca,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIL,GAAa,GACbE,EAAS,MAHb,UAIuBI,EAAAA,EAAAA,IAAaH,GAJpC,OAIUI,EAJV,OAKIT,EAAQS,EAAKV,MALjB,gDAOIK,EAAS,KAAMM,SAPnB,yBASIR,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadS,EACD,GAAE,CAACN,KAGF,UAACX,EAAD,WACGS,IAAS,SAAC,IAAD,CAAOS,KAAM,kBACN,IAAhBb,EAAKc,SAAgB,SAAC,IAAD,CAAOD,KAAM,mBAClCX,IAAa,SAACa,EAAA,EAAD,IACbf,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACxB,EAAD,YACE,SAACH,EAAD,CACE4B,IACEH,EAAY,0CAC2BA,GACnCI,KAGR,SAACzB,EAAD,UAAOsB,KACP,SAACrB,EAAD,UAAOsB,MATGH,EADJ,MAef,C,gFChDYM,E,QAAe7B,GAAAA,IAAH,4I,SCCZqB,EAAS,WACpB,OACE,SAACQ,EAAD,WACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,SAAS,KAIhB,C,mMCdDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,uBACjBrB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXuB,EAAiB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACRL,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBG,EADrB,iBACmCC,IAF3B,uBACvBzB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjB0B,EAAe,mCAAG,WAAMnB,GAAN,yFACNa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,oBAAkCc,IAD5B,uBACrBrB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfD,EAAY,mCAAG,WAAMQ,GAAN,yFACHa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,4BAA0Cc,IADvC,uBAClBrB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZ2B,EAAe,mCAAG,WAAMpB,GAAN,yFACNa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,4BAA0Cc,IADpC,uBACrBrB,EADqB,EACrBA,KACR4B,QAAQC,IAAI7B,GAFiB,kBAGtBA,GAHsB,2CAAH,qD,sECzBf8B,E,QAAa9C,GAAAA,GAAH,wG,SCSvB,EARc,SAAC,GAAc,IAAZmB,EAAW,EAAXA,KACf,OAAO,SAAC2B,EAAD,UAAa3B,GACrB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","service/api.js","utils/Error/Error.styled.jsx","utils/Error/Error.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 160px;\n  display: block;\n`;\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 40px;\n  list-style: none;\n`;\nexport const Actor = styled.li`\n  background-color: #3c84ab;\n  border-radius: 30px;\n`;\n\nexport const Name = styled.h3`\n  max-width: 160px;\n  color: #0a2647;\n  font-size: 18px;\n  text-align: center;\n  font-weight: 300;\n  margin-top: 8px;\n`;\n\nexport const Role = styled.p`\n  max-width: 160px;\n  color: white;\n  font-size: 14px;\n  text-align: center;\n  font-weight: 300;\n  margin-bottom: 10px;\n`;\n\nexport const Error = styled.p`\n  color: #fff;\n  font-size: 26px;\n  text-align: center;\n  font-weight: 300;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Actor, Name, Photo, PhotoList, Role } from './Cast.styled';\nimport { getMovieCast } from 'service/api';\nimport defaultCastPic from '../../imgDefaults/pexels-cottonbro-studio-3585088.jpg';\nimport Error from 'utils/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadCast() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const data = await getMovieCast(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadCast();\n  }, [movieId]);\n\n  return (\n    <PhotoList>\n      {error && <Error text={'No Data Found'} />}\n      {cast.length === 0 && <Error text={'Cast Not Found'} />}\n      {isLoading && <Loader />}\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Actor key={id}>\n          <Photo\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : defaultCastPic\n            }\n          />\n          <Name>{name}</Name>\n          <Role>{character}</Role>\n        </Actor>\n      ))}\n    </PhotoList>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 40%;\n  left: 50%;\n  margin: 0 auto;\n  transform: translateX(-50%);\n  z-index: 9999;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#ffd600\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '213f597963ca958bdd3fa992f56dc364';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesOnSearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  console.log(data);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h3`\n  text-align: center;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorTitle } from './Error.styled';\n\nconst Error = ({ text }) => {\n  return <ErrorTitle>{text}</ErrorTitle>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n"],"names":["Photo","styled","PhotoList","Actor","Name","Role","useState","cast","setCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieCast","data","message","loadCast","text","length","Loader","map","id","profile_path","name","character","src","defaultCastPic","StyledLoader","height","width","radius","color","ariaLabel","visible","axios","API_KEY","getTrending","getMoviesOnSearch","query","page","getMovieDetails","getMovieReviews","console","log","ErrorTitle"],"sourceRoot":""}