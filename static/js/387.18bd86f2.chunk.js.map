{"version":3,"file":"static/js/387.18bd86f2.chunk.js","mappings":"gMAEaA,E,QAAeC,GAAAA,IAAH,4I,SCCZC,EAAS,WACpB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,SAAS,KAIhB,C,8JCdYC,EAAaR,EAAAA,GAAAA,GAAH,gDAIVS,EAAaT,EAAAA,GAAAA,GAAH,4LAQVU,EAAOV,EAAAA,GAAAA,GAAH,2GAOJW,EAAOX,EAAAA,GAAAA,EAAH,yG,uCCyBjB,EAvCgB,WACd,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIL,GAAa,GACbE,EAAS,MAHb,UAIuBI,EAAAA,EAAAA,IAAgBH,GAJvC,OAIUI,EAJV,OAKIT,EAAUS,EAAKC,SALnB,gDAOIN,EAAS,KAAMO,SAPnB,yBASIT,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadU,EACD,GAAE,CAACP,KAGF,UAACX,EAAD,WACGS,IAAS,SAACU,EAAA,EAAD,CAAOC,KAAM,kBACJ,IAAlBf,EAAOgB,SACN,SAACF,EAAA,EAAD,CAAOC,KAAM,4CAEdb,IAAa,SAACd,EAAA,EAAD,IACbY,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACxB,EAAD,YACE,SAACC,EAAD,UAAOqB,KACP,SAACpB,EAAD,UAAOqB,MAFQC,EADP,MAQjB,C,mMC1CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,uBACjBZ,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXc,EAAiB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACRL,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBG,EADrB,iBACmCC,IAF3B,uBACvBhB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,sDAOjBiB,EAAe,mCAAG,WAAMP,GAAN,yFACNC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,oBAAkCE,IAD5B,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfkB,EAAY,mCAAG,WAAMR,GAAN,yFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IADvC,uBAClBZ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZD,EAAe,mCAAG,WAAMW,GAAN,yFACNC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,4BAA0CE,IADpC,uBACrBZ,EADqB,EACrBA,KACRmB,QAAQC,IAAIpB,GAFiB,kBAGtBA,GAHsB,2CAAH,qD,sECzBfqB,E,QAAa5C,GAAAA,GAAH,wG,SCSvB,EARc,SAAC,GAAc,IAAZ4B,EAAW,EAAXA,KACf,OAAO,SAACgB,EAAD,UAAahB,GACrB,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","service/api.js","utils/Error/Error.styled.jsx","utils/Error/Error.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  position: fixed;\n  top: 40%;\n  left: 50%;\n  margin: 0 auto;\n  transform: translateX(-50%);\n  z-index: 9999;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#ffd600\"\n        ariaLabel=\"three-dots-loading\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin-bottom: 40px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n  padding: 20px;\n  border-bottom: 1px solid rgb(78, 116, 193);\n  list-style: none;\n  background-color: #6096b4;\n  border-radius: 20px;\n`;\nexport const Name = styled.h2`\n  color: #0a2647;\n  font-size: 28px;\n  margin-top: 6px;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  color: #fff;\n  font-size: 14px;\n  font-weight: 300;\n  margin-bottom: 14px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Name, ReviewItem, ReviewList, Text } from './Reviews.styled';\nimport { getMovieReviews } from 'service/api';\nimport Error from 'utils/Error/Error';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function loadReview() {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const data = await getMovieReviews(movieId);\n        setReview(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadReview();\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      {error && <Error text={'No Data Found'} />}\n      {review.length === 0 && (\n        <Error text={'We dont have any reviews for this movie'} />\n      )}\n      {isLoading && <Loader />}\n      {review.map(({ author, content, id }) => (\n        <ReviewItem key={id}>\n          <Name>{author}</Name>\n          <Text>{content}</Text>\n        </ReviewItem>\n      ))}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '213f597963ca958bdd3fa992f56dc364';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMoviesOnSearch = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  console.log(data);\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const ErrorTitle = styled.h3`\n  text-align: center;\n  color: #fff;\n  font-size: 20px;\n  font-weight: 300;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorTitle } from './Error.styled';\n\nconst Error = ({ text }) => {\n  return <ErrorTitle>{text}</ErrorTitle>;\n};\n\nError.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Error;\n"],"names":["StyledLoader","styled","Loader","height","width","radius","color","ariaLabel","visible","ReviewList","ReviewItem","Name","Text","useState","review","setReview","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","getMovieReviews","data","results","message","loadReview","Error","text","length","map","author","content","id","axios","API_KEY","getTrending","getMoviesOnSearch","query","page","getMovieDetails","getMovieCast","console","log","ErrorTitle"],"sourceRoot":""}